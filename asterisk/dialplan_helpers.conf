; vim: syntax=asterisk tabstop=4 shiftwidth=4 expandtab

; helpers for CDR operations
[qos-cdr]
exten => s,1,Verbose(5,"qos cdr")
    same => n,Set(CDR(sipcallid)=${SIPCALLID})
    same => n,Set(CDR(cause)=${HANGUPCAUSE})
    same => n,Set(CDR(pckt_sent)=${CHANNEL(rtpqos,audio,txcount)})
    same => n,Set(CDR(pckt_recvd)=${CHANNEL(rtpqos,audio,rxcount)})
    same => n,Set(CDR(local_rx_pckt_loss)=${CHANNEL(rtpqos,audio,rxploss)})
    same => n,Set(CDR(local_tx_pckt_loss)=${CHANNEL(rtpqos,audio,txploss)})
    same => n,Set(CDR(local_rx_jitter)=${CHANNEL(rtpqos,audio,rxjitter)})
    same => n,Set(CDR(local_tx_jitter)=${CHANNEL(rtpqos,audio,txjitter)})
    same => n,Set(CDR(local_jitter_max)=${CHANNEL(rtpqos,audio,local_maxjitter)})
    same => n,Set(CDR(local_jitter_min)=${CHANNEL(rtpqos,audio,local_minjitter)})
    same => n,Set(CDR(local_jitter_norm_dev)=${CHANNEL(rtpqos,audio,local_normdevjitter)})
    same => n,Set(CDR(local_jitter_std_dev)=${CHANNEL(rtpqos,audio,local_stdevjitter)})
    same => n,Set(CDR(rtt)=${CHANNEL(rtpqos,audio,rtt)})
    same => n,Set(CDR(minrtt)=${CHANNEL(rtpqos,audio,minrtt)})
    same => n,Set(CDR(maxrtt)=${CHANNEL(rtpqos,audio,maxrtt)})
    same => n,Return()
